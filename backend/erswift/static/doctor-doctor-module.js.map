{"version":3,"sources":["./src/app/doctor/doctor.module.ts","./src/app/doctor/back-button-shell/back-button-shell.component.ts","./src/app/doctor/back-button-shell/back-button-shell.component.html","./src/app/doctor/dashboard/filter.service.ts","./src/app/doctor/dashboard/dashboard.component.ts","./src/app/doctor/dashboard/dashboard.component.html","./src/app/doctor/patient-info/patient-info.component.ts","./src/app/doctor/patient-info/patient-info.component.html","./src/app/doctor/login/login.component.ts","./src/app/doctor/login/login.component.html"],"names":[],"mappings":"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","file":"doctor-doctor-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PatientInfoComponent } from './patient-info/patient-info.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from '../services/auth.service';\nimport { BackButtonShellComponent } from './back-button-shell/back-button-shell.component';\n\n\n@NgModule({\n  declarations: [DashboardComponent, PatientInfoComponent, LoginComponent, BackButtonShellComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: BackButtonShellComponent,\n        children: [\n          { path: 'login', component: LoginComponent },\n          { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n          { path: 'patient-info/:id', component: PatientInfoComponent, canActivate: [AuthGuard] },\n        ]\n      }\n\n    ])\n  ],\n})\nexport class DoctorModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-back-button-shell',\n  templateUrl: './back-button-shell.component.html',\n  styleUrls: ['./back-button-shell.component.scss']\n})\nexport class BackButtonShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"back-button\" [routerLink]=\"['']\">\n    <h1>&#8249;</h1>\n</div>\n\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n  filterBy: string;\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { interval, merge, forkJoin } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { IHospitalArea } from 'src/app/interfaces/ihospital-area';\nimport { HttpGetService } from 'src/app/services/http-get.service';\nimport { FilterService } from './filter.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n\n  hospital_areas: any = [];\n  filtered_areas: any = [];\n\n  get areaFilter(): string {\n    return this.filterService.filterBy;\n  }\n\n  set areaFilter(value:string) {\n    this.filterService.filterBy = value;\n    this.filtered_areas = this.areaFilter ? this.performFilter(this.areaFilter) : this.hospital_areas;\n  }\n\n\n  constructor(private filterService: FilterService, private httpGetService: HttpGetService) { }\n\n\n  ngOnInit(): void {\n    // Combines the Observables\n    const hospitalAreas = forkJoin([\n      this.httpGetService.getPriorityAreas().pipe(),\n      this.httpGetService.getHospitalAreas().pipe()\n    ]).subscribe(\n      areas => {\n        this.sortAreas(areas);\n        this.filterOnInit();\n        console.log(areas)\n      },\n    );\n  }\n  \n  // After Combining the Observables, the Observables look like:\n  // [[{}{}{}][{}{}]]\n  // Therefore, we for loop over the lists, and combine the 5 objects\n  // into one big list.\n  sortAreas(area:any) {\n    for (let i=0; i < area.length; i++) {\n      for (let j=0; j < area[i].length; j++) {\n        this.hospital_areas.push(area[i][j]);\n      }\n    }\n  }\n\n  filterOnInit():void {\n    if (this.filterService.filterBy) {\n      this.filtered_areas = this.performFilter(this.filterService.filterBy);\n    } else {\n      this.filtered_areas = this.hospital_areas;\n    }\n  }\n\n\n  performFilter(filterBy: string): any {\n    return this.hospital_areas.filter((area: IHospitalArea) =>\n      area.area.indexOf(filterBy) !== -1);\n  }\n}\n","<div class=\"dashboard\" *ngIf=\"hospital_areas\">\n    <h1 class=\"dashboard__header\">Dashboard</h1>\n\n    <select [(ngModel)]=\"areaFilter\" class=\"dashboard__dropdown\">\n        <option selected value=\"\">All</option>\n        <option *ngFor=\"let area of hospital_areas\" [ngValue]=\"area.area\">{{ area.area }}</option>\n    </select>\n        \n    <div class=\"dashboard__list\" *ngFor=\"let area of filtered_areas\">\n        <div class=\"dashboard__list__patients-list\" *ngIf=\"area.priority_patients\">\n            <div class=\"dashboard__list__patients-list__patient\" *ngFor=\"let patient of area.priority_patients\"\n                [routerLink]=\"['/doctor/patient-info/' + patient.id, {triage: 'priority'}]\">\n                <h3>Name: {{ patient.first_name }} {{ patient.last_name}}</h3>\n                <h4>Date of Birth: {{ patient.date_of_birth }}</h4>\n\n                {{ patient.emer_reasoning }}\n            </div>\n        </div>\n\n        <div class=\"dashboard__list__patients-list\" *ngIf=\"area.patients\">\n            <div class=\"dashboard__list__patients-list__patient\" *ngFor=\"let patient of area.patients\"\n                [routerLink]=\"['/doctor/patient-info/' + patient.id, {triage: 'urgent'}]\">\n                <h3>Name: {{ patient.first_name }} {{ patient.last_name}}</h3>\n                <h4>Date of Birth: {{ patient.date_of_birth }}</h4>\n\n                {{ patient.reasoning }}\n            </div>\n        </div>\n\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { interval } from 'rxjs';\nimport { HttpGetService } from 'src/app/services/http-get.service';\n\n@Component({\n  selector: 'app-patient-info',\n  templateUrl: './patient-info.component.html',\n  styleUrls: ['./patient-info.component.scss']\n})\nexport class PatientInfoComponent implements OnInit {\n\n  private erswiftAPIUrl = \"http://127.0.0.1:8000/api/\";\n\n  triage: string;\n  patient: any;\n\n  patient_id: number;\n\n  constructor(private route: ActivatedRoute, private router: Router, private httpGetService: HttpGetService, private http: HttpClient,) {\n\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => {\n        this.patient_id = +params.get('id');\n        this.triage = params.get('triage');\n        this.getPatient(this.patient_id);\n      }\n    )\n  }\n\n  getPatient(id:number):void {\n    if (this.triage == \"priority\") {\n      this.httpGetService.getPatientFromPriority(id).subscribe(\n        patient => {\n          this.patient = patient;\n          console.log(this.patient)\n        }\n      )\n    } else if (this.triage == \"urgent\") {\n      this.httpGetService.getPatientFromNormal(id).subscribe(\n        patient => {\n          this.patient = patient;\n        }\n      )\n    }\n  }\n\n  delete() {\n    if (this.triage == \"priority\") {\n      const url: string = this.erswiftAPIUrl + \"patients/priority_patient/\" + this.patient.id + \"/\"\n      if (confirm(\"Is the Patient Dismissed?\")) {\n        this.http.delete(url).subscribe(\n          (res) => this.router.navigate(['/doctor/dashboard']),\n        )\n      }\n    } else if (this.triage == \"urgent\") {\n      const url: string = this.erswiftAPIUrl + \"patients/patient/\" + this.patient.id + \"/\"\n      if (confirm(\"Is the Patient Dismissed?\")) {\n        this.http.delete(url).subscribe(\n          (res) => this.router.navigate(['/doctor/dashboard']),\n        )\n      }\n    }\n  }\n\n  goToDashBoard() {\n    \n  }\n\n}\n","<div class=\"patient-info\" *ngIf=\"patient\">\n    <h1 class=\"patient-info__title\">Patient <br /> Information</h1>\n    <div class=\"patient-info__dash\"></div>\n    <div class=\"patient-info__body\">\n        <h2 class=\"patient-info__body__section-header\">Patient Profile</h2>\n        <br />\n        <h3 class=\"patient-info__body__field\"><span>Full Name: </span><br /> {{ patient.first_name }} {{ patient.last_name }} </h3>\n        <br />\n        <h3 class=\"patient-info__body__field\"><span>Date of Birth:</span><br />  {{ patient.date_of_birth | date}}</h3>\n        <br />\n        <h3 class=\"patient-info__body__field\"><span>Sign Up Time:</span><br /> {{ patient.current_time | date:'medium' }}</h3>\n        <br />\n        <h2 class=\"patient-info__body__section-header\">Cause of Visit</h2>\n        <br />\n        <h3 class=\"patient-info__body__field\" *ngIf=\"patient.emer_reasoning\"><span>Cause: </span><br /> {{ patient.emer_reasoning }}</h3>\n        <h3 class=\"patient-info__body__field\" *ngIf=\"patient.reasoning\"><span>Cause: </span><br /> {{ patient.reasoning }}</h3>\n        <br />\n        <h3 class=\"patient-info__body__field\" *ngIf=\"patient.extra_inforamtion\"><span>Extra Information: </span><br /> {{ patient.extra_inforamtion }}</h3>\n    </div>\n    <div class=\"patient-info__center\">\n        <div class=\"patient-info__center__dismiss-button btn btn--blue\" (click)=\"delete()\">Dismiss</div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error: any;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService, \n    private router: Router, \n  ) { }\n  \n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  save() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.get(\"username\").value, this.loginForm.get(\"password\").value).subscribe(\n        success => this.router.navigate(['']),\n        error => this.error = error\n      )\n    }\n  }\n\n}\n","<div class=\"login\">\n    <div class=\"login__header\">\n      <h1>Log In!</h1>\n    </div>\n    <form [formGroup]=\"loginForm\" class=\"login__form\" (ngSubmit)=\"save()\">\n      <div class=\"login__form__field\">\n        <label class=\"login__form__field__label\">Username:</label><br />\n        <input class=\"login__form__field__input\" type=\"text\" \n                                                placeholder=\"Enter Username\" \n                                                formControlName=\"username\" \n                                                autocomplete=\"username\"\n                                                [ngClass]=\"{'is-invalid': (loginForm.get('username').touched || \n                                                                           loginForm.get('username').dirty) && !loginForm.get('username').valid}\">\n                          \n        <p *ngIf=\"loginForm.get('username').errors?.required && loginForm.get('username').touched\" class=\"is-invalid\">\n          *This field is required.\n        </p>\n      </div>\n      <div class=\"login__form__field\">\n        <label class=\"login__form__field__label\">Password:</label><br />\n        <input class=\"login__form__field__input\" type=\"password\" \n                                                placeholder=\"Enter Password\" \n                                                formControlName=\"password\" \n                                                autocomplete=\"current-password\"\n                                                [ngClass]=\"{'is-invalid': (loginForm.get('password').touched || \n                                                                           loginForm.get('password').dirty) && !loginForm.get('password').valid}\">\n        <p *ngIf=\"loginForm.get('password').errors?.required && loginForm.get('password').touched\" class=\"is-invalid\">\n          *This field is required.\n        </p>\n      </div>\n      <button type=\"submit\" class=\"btn btn--blue login__form__submit\">Log In</button>\n    </form>\n  \n    <div class=\"login__check-info\" *ngIf=\"error\">\n      <span class=\"is-invalid\">There appears to have been an error! Please check over your login information!</span>\n    </div>\n  </div>\n  "],"sourceRoot":"webpack:///"}